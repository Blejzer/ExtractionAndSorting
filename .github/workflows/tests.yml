name: Tests

on:
  push:
    branches: [ main, v2, "feature/**" ]
  pull_request:
    branches: [ main, v2 ]

jobs:
  unit:
    name: Unit Tests
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest pytest-cov

      - name: Run unit tests (no DB)
        env:
          TEST_MONGODB_URI: "mongodb://localhost:27017/skip_db"
          FLASK_ENV: "test"
          FLASK_DEBUG: "0"
          TIMEZONE: "Europe/Zagreb"
        run: |
          pytest -q -m "not integration" --cov=./ --cov-report=xml

      - name: Upload coverage (artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-xml
          path: coverage.xml

  integration:
    name: Integration Tests (Mongo)
    runs-on: ubuntu-latest
    needs: unit
    services:
      mongo:
        image: mongo:7.0
        ports: [ "27017:27017" ]
        options: >-
          --health-cmd "mongosh --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.13"

      - name: Cache pip
        uses: actions/cache@v4
        with:
          path: ~/.cache/pip
          key: pip-${{ runner.os }}-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            pip-${{ runner.os }}-

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install pytest

      - name: Wait for Mongo to be healthy
        run: |
          for i in {1..30}; do
            nc -z 127.0.0.1 27017 && echo "Mongo is up" && break
            echo "Waiting for Mongo..." && sleep 2
          done

      - name: Run integration tests (with DB)
        env:
          TEST_MONGODB_URI: "mongodb://127.0.0.1:27017/test_db"
          FLASK_ENV: "test"
          FLASK_DEBUG: "0"
          TIMEZONE: "Europe/Zagreb"
        run: |
          pytest -q -m "integration"
